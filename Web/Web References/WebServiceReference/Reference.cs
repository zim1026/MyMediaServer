//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Web.WebServiceReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetEmptyArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArtistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmptyAlbumOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAlbumOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAlbumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlbumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlbumsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmptySongOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSongOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSongOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSongsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSongListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewestSongDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSearchResultsSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFileTagOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetID3TagInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmptyID3TagOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsPlaylistedSongOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManageUserPlaylistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPlaylistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthorizedUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmptyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUserOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::Web.Properties.Settings.Default.Web_WebServiceReference_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetEmptyArtistCompletedEventHandler GetEmptyArtistCompleted;
        
        /// <remarks/>
        public event UpdateArtistCompletedEventHandler UpdateArtistCompleted;
        
        /// <remarks/>
        public event SaveArtistCompletedEventHandler SaveArtistCompleted;
        
        /// <remarks/>
        public event GetArtistCompletedEventHandler GetArtistCompleted;
        
        /// <remarks/>
        public event GetArtistsCompletedEventHandler GetArtistsCompleted;
        
        /// <remarks/>
        public event GetEmptyAlbumCompletedEventHandler GetEmptyAlbumCompleted;
        
        /// <remarks/>
        public event UpdateAlbumCompletedEventHandler UpdateAlbumCompleted;
        
        /// <remarks/>
        public event SaveAlbumCompletedEventHandler SaveAlbumCompleted;
        
        /// <remarks/>
        public event GetAlbumCompletedEventHandler GetAlbumCompleted;
        
        /// <remarks/>
        public event GetAlbumsCompletedEventHandler GetAlbumsCompleted;
        
        /// <remarks/>
        public event GetEmptySongCompletedEventHandler GetEmptySongCompleted;
        
        /// <remarks/>
        public event SaveSongCompletedEventHandler SaveSongCompleted;
        
        /// <remarks/>
        public event GetSongCompletedEventHandler GetSongCompleted;
        
        /// <remarks/>
        public event GetSongsCompletedEventHandler GetSongsCompleted;
        
        /// <remarks/>
        public event GetSongListCompletedEventHandler GetSongListCompleted;
        
        /// <remarks/>
        public event GetNewestSongDateCompletedEventHandler GetNewestSongDateCompleted;
        
        /// <remarks/>
        public event GetSearchResultsSummaryCompletedEventHandler GetSearchResultsSummaryCompleted;
        
        /// <remarks/>
        public event UploadFileCompletedEventHandler UploadFileCompleted;
        
        /// <remarks/>
        public event ProcessFileCompletedEventHandler ProcessFileCompleted;
        
        /// <remarks/>
        public event UpdateFileTagCompletedEventHandler UpdateFileTagCompleted;
        
        /// <remarks/>
        public event GetID3TagInfoCompletedEventHandler GetID3TagInfoCompleted;
        
        /// <remarks/>
        public event GetEmptyID3TagCompletedEventHandler GetEmptyID3TagCompleted;
        
        /// <remarks/>
        public event IsPlaylistedSongCompletedEventHandler IsPlaylistedSongCompleted;
        
        /// <remarks/>
        public event ManageUserPlaylistCompletedEventHandler ManageUserPlaylistCompleted;
        
        /// <remarks/>
        public event GetUserPlaylistCompletedEventHandler GetUserPlaylistCompleted;
        
        /// <remarks/>
        public event GetUsersCompletedEventHandler GetUsersCompleted;
        
        /// <remarks/>
        public event AuthorizedUserCompletedEventHandler AuthorizedUserCompleted;
        
        /// <remarks/>
        public event GetUserByNameCompletedEventHandler GetUserByNameCompleted;
        
        /// <remarks/>
        public event GetUserByIDCompletedEventHandler GetUserByIDCompleted;
        
        /// <remarks/>
        public event GetEmptyUserCompletedEventHandler GetEmptyUserCompleted;
        
        /// <remarks/>
        public event SaveUserCompletedEventHandler SaveUserCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmptyArtist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ARTIST GetEmptyArtist() {
            object[] results = this.Invoke("GetEmptyArtist", new object[0]);
            return ((ARTIST)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmptyArtistAsync() {
            this.GetEmptyArtistAsync(null);
        }
        
        /// <remarks/>
        public void GetEmptyArtistAsync(object userState) {
            if ((this.GetEmptyArtistOperationCompleted == null)) {
                this.GetEmptyArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmptyArtistOperationCompleted);
            }
            this.InvokeAsync("GetEmptyArtist", new object[0], this.GetEmptyArtistOperationCompleted, userState);
        }
        
        private void OnGetEmptyArtistOperationCompleted(object arg) {
            if ((this.GetEmptyArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmptyArtistCompleted(this, new GetEmptyArtistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateArtist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ARTIST UpdateArtist(int artistID, string artistName, string filename) {
            object[] results = this.Invoke("UpdateArtist", new object[] {
                        artistID,
                        artistName,
                        filename});
            return ((ARTIST)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateArtistAsync(int artistID, string artistName, string filename) {
            this.UpdateArtistAsync(artistID, artistName, filename, null);
        }
        
        /// <remarks/>
        public void UpdateArtistAsync(int artistID, string artistName, string filename, object userState) {
            if ((this.UpdateArtistOperationCompleted == null)) {
                this.UpdateArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateArtistOperationCompleted);
            }
            this.InvokeAsync("UpdateArtist", new object[] {
                        artistID,
                        artistName,
                        filename}, this.UpdateArtistOperationCompleted, userState);
        }
        
        private void OnUpdateArtistOperationCompleted(object arg) {
            if ((this.UpdateArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateArtistCompleted(this, new UpdateArtistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveArtist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ARTIST SaveArtist(ARTIST artist) {
            object[] results = this.Invoke("SaveArtist", new object[] {
                        artist});
            return ((ARTIST)(results[0]));
        }
        
        /// <remarks/>
        public void SaveArtistAsync(ARTIST artist) {
            this.SaveArtistAsync(artist, null);
        }
        
        /// <remarks/>
        public void SaveArtistAsync(ARTIST artist, object userState) {
            if ((this.SaveArtistOperationCompleted == null)) {
                this.SaveArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveArtistOperationCompleted);
            }
            this.InvokeAsync("SaveArtist", new object[] {
                        artist}, this.SaveArtistOperationCompleted, userState);
        }
        
        private void OnSaveArtistOperationCompleted(object arg) {
            if ((this.SaveArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveArtistCompleted(this, new SaveArtistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetArtist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ARTIST GetArtist(int artistId) {
            object[] results = this.Invoke("GetArtist", new object[] {
                        artistId});
            return ((ARTIST)(results[0]));
        }
        
        /// <remarks/>
        public void GetArtistAsync(int artistId) {
            this.GetArtistAsync(artistId, null);
        }
        
        /// <remarks/>
        public void GetArtistAsync(int artistId, object userState) {
            if ((this.GetArtistOperationCompleted == null)) {
                this.GetArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArtistOperationCompleted);
            }
            this.InvokeAsync("GetArtist", new object[] {
                        artistId}, this.GetArtistOperationCompleted, userState);
        }
        
        private void OnGetArtistOperationCompleted(object arg) {
            if ((this.GetArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArtistCompleted(this, new GetArtistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetArtists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ARTIST[] GetArtists() {
            object[] results = this.Invoke("GetArtists", new object[0]);
            return ((ARTIST[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArtistsAsync() {
            this.GetArtistsAsync(null);
        }
        
        /// <remarks/>
        public void GetArtistsAsync(object userState) {
            if ((this.GetArtistsOperationCompleted == null)) {
                this.GetArtistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArtistsOperationCompleted);
            }
            this.InvokeAsync("GetArtists", new object[0], this.GetArtistsOperationCompleted, userState);
        }
        
        private void OnGetArtistsOperationCompleted(object arg) {
            if ((this.GetArtistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArtistsCompleted(this, new GetArtistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmptyAlbum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ALBUM GetEmptyAlbum() {
            object[] results = this.Invoke("GetEmptyAlbum", new object[0]);
            return ((ALBUM)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmptyAlbumAsync() {
            this.GetEmptyAlbumAsync(null);
        }
        
        /// <remarks/>
        public void GetEmptyAlbumAsync(object userState) {
            if ((this.GetEmptyAlbumOperationCompleted == null)) {
                this.GetEmptyAlbumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmptyAlbumOperationCompleted);
            }
            this.InvokeAsync("GetEmptyAlbum", new object[0], this.GetEmptyAlbumOperationCompleted, userState);
        }
        
        private void OnGetEmptyAlbumOperationCompleted(object arg) {
            if ((this.GetEmptyAlbumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmptyAlbumCompleted(this, new GetEmptyAlbumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAlbum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ALBUM UpdateAlbum(int albumID, string albumName, string filename) {
            object[] results = this.Invoke("UpdateAlbum", new object[] {
                        albumID,
                        albumName,
                        filename});
            return ((ALBUM)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAlbumAsync(int albumID, string albumName, string filename) {
            this.UpdateAlbumAsync(albumID, albumName, filename, null);
        }
        
        /// <remarks/>
        public void UpdateAlbumAsync(int albumID, string albumName, string filename, object userState) {
            if ((this.UpdateAlbumOperationCompleted == null)) {
                this.UpdateAlbumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAlbumOperationCompleted);
            }
            this.InvokeAsync("UpdateAlbum", new object[] {
                        albumID,
                        albumName,
                        filename}, this.UpdateAlbumOperationCompleted, userState);
        }
        
        private void OnUpdateAlbumOperationCompleted(object arg) {
            if ((this.UpdateAlbumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAlbumCompleted(this, new UpdateAlbumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAlbum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ALBUM SaveAlbum(ALBUM a) {
            object[] results = this.Invoke("SaveAlbum", new object[] {
                        a});
            return ((ALBUM)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAlbumAsync(ALBUM a) {
            this.SaveAlbumAsync(a, null);
        }
        
        /// <remarks/>
        public void SaveAlbumAsync(ALBUM a, object userState) {
            if ((this.SaveAlbumOperationCompleted == null)) {
                this.SaveAlbumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAlbumOperationCompleted);
            }
            this.InvokeAsync("SaveAlbum", new object[] {
                        a}, this.SaveAlbumOperationCompleted, userState);
        }
        
        private void OnSaveAlbumOperationCompleted(object arg) {
            if ((this.SaveAlbumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAlbumCompleted(this, new SaveAlbumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAlbum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ALBUM GetAlbum(int albumId) {
            object[] results = this.Invoke("GetAlbum", new object[] {
                        albumId});
            return ((ALBUM)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlbumAsync(int albumId) {
            this.GetAlbumAsync(albumId, null);
        }
        
        /// <remarks/>
        public void GetAlbumAsync(int albumId, object userState) {
            if ((this.GetAlbumOperationCompleted == null)) {
                this.GetAlbumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlbumOperationCompleted);
            }
            this.InvokeAsync("GetAlbum", new object[] {
                        albumId}, this.GetAlbumOperationCompleted, userState);
        }
        
        private void OnGetAlbumOperationCompleted(object arg) {
            if ((this.GetAlbumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlbumCompleted(this, new GetAlbumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAlbums", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ALBUM[] GetAlbums(int artistId) {
            object[] results = this.Invoke("GetAlbums", new object[] {
                        artistId});
            return ((ALBUM[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAlbumsAsync(int artistId) {
            this.GetAlbumsAsync(artistId, null);
        }
        
        /// <remarks/>
        public void GetAlbumsAsync(int artistId, object userState) {
            if ((this.GetAlbumsOperationCompleted == null)) {
                this.GetAlbumsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlbumsOperationCompleted);
            }
            this.InvokeAsync("GetAlbums", new object[] {
                        artistId}, this.GetAlbumsOperationCompleted, userState);
        }
        
        private void OnGetAlbumsOperationCompleted(object arg) {
            if ((this.GetAlbumsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlbumsCompleted(this, new GetAlbumsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmptySong", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SONG GetEmptySong() {
            object[] results = this.Invoke("GetEmptySong", new object[0]);
            return ((SONG)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmptySongAsync() {
            this.GetEmptySongAsync(null);
        }
        
        /// <remarks/>
        public void GetEmptySongAsync(object userState) {
            if ((this.GetEmptySongOperationCompleted == null)) {
                this.GetEmptySongOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmptySongOperationCompleted);
            }
            this.InvokeAsync("GetEmptySong", new object[0], this.GetEmptySongOperationCompleted, userState);
        }
        
        private void OnGetEmptySongOperationCompleted(object arg) {
            if ((this.GetEmptySongCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmptySongCompleted(this, new GetEmptySongCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveSong", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SONG SaveSong(SONG s) {
            object[] results = this.Invoke("SaveSong", new object[] {
                        s});
            return ((SONG)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSongAsync(SONG s) {
            this.SaveSongAsync(s, null);
        }
        
        /// <remarks/>
        public void SaveSongAsync(SONG s, object userState) {
            if ((this.SaveSongOperationCompleted == null)) {
                this.SaveSongOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSongOperationCompleted);
            }
            this.InvokeAsync("SaveSong", new object[] {
                        s}, this.SaveSongOperationCompleted, userState);
        }
        
        private void OnSaveSongOperationCompleted(object arg) {
            if ((this.SaveSongCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSongCompleted(this, new SaveSongCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSong", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SONG GetSong(int songId) {
            object[] results = this.Invoke("GetSong", new object[] {
                        songId});
            return ((SONG)(results[0]));
        }
        
        /// <remarks/>
        public void GetSongAsync(int songId) {
            this.GetSongAsync(songId, null);
        }
        
        /// <remarks/>
        public void GetSongAsync(int songId, object userState) {
            if ((this.GetSongOperationCompleted == null)) {
                this.GetSongOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSongOperationCompleted);
            }
            this.InvokeAsync("GetSong", new object[] {
                        songId}, this.GetSongOperationCompleted, userState);
        }
        
        private void OnGetSongOperationCompleted(object arg) {
            if ((this.GetSongCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSongCompleted(this, new GetSongCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSongs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SONG[] GetSongs(int albumId) {
            object[] results = this.Invoke("GetSongs", new object[] {
                        albumId});
            return ((SONG[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSongsAsync(int albumId) {
            this.GetSongsAsync(albumId, null);
        }
        
        /// <remarks/>
        public void GetSongsAsync(int albumId, object userState) {
            if ((this.GetSongsOperationCompleted == null)) {
                this.GetSongsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSongsOperationCompleted);
            }
            this.InvokeAsync("GetSongs", new object[] {
                        albumId}, this.GetSongsOperationCompleted, userState);
        }
        
        private void OnGetSongsOperationCompleted(object arg) {
            if ((this.GetSongsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSongsCompleted(this, new GetSongsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSongList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetSongList(string artistSearch, string albumSearch, string songSearch, string genreSearch, string dateAddedSearch) {
            this.Invoke("GetSongList", new object[] {
                        artistSearch,
                        albumSearch,
                        songSearch,
                        genreSearch,
                        dateAddedSearch});
        }
        
        /// <remarks/>
        public void GetSongListAsync(string artistSearch, string albumSearch, string songSearch, string genreSearch, string dateAddedSearch) {
            this.GetSongListAsync(artistSearch, albumSearch, songSearch, genreSearch, dateAddedSearch, null);
        }
        
        /// <remarks/>
        public void GetSongListAsync(string artistSearch, string albumSearch, string songSearch, string genreSearch, string dateAddedSearch, object userState) {
            if ((this.GetSongListOperationCompleted == null)) {
                this.GetSongListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSongListOperationCompleted);
            }
            this.InvokeAsync("GetSongList", new object[] {
                        artistSearch,
                        albumSearch,
                        songSearch,
                        genreSearch,
                        dateAddedSearch}, this.GetSongListOperationCompleted, userState);
        }
        
        private void OnGetSongListOperationCompleted(object arg) {
            if ((this.GetSongListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSongListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewestSongDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewestSongDate() {
            object[] results = this.Invoke("GetNewestSongDate", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewestSongDateAsync() {
            this.GetNewestSongDateAsync(null);
        }
        
        /// <remarks/>
        public void GetNewestSongDateAsync(object userState) {
            if ((this.GetNewestSongDateOperationCompleted == null)) {
                this.GetNewestSongDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewestSongDateOperationCompleted);
            }
            this.InvokeAsync("GetNewestSongDate", new object[0], this.GetNewestSongDateOperationCompleted, userState);
        }
        
        private void OnGetNewestSongDateOperationCompleted(object arg) {
            if ((this.GetNewestSongDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewestSongDateCompleted(this, new GetNewestSongDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSearchResultsSummary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SearchSummary GetSearchResultsSummary(string artistSearch, string albumSearch, string songSearch, string genreSearch, string dateAddedSearch) {
            object[] results = this.Invoke("GetSearchResultsSummary", new object[] {
                        artistSearch,
                        albumSearch,
                        songSearch,
                        genreSearch,
                        dateAddedSearch});
            return ((SearchSummary)(results[0]));
        }
        
        /// <remarks/>
        public void GetSearchResultsSummaryAsync(string artistSearch, string albumSearch, string songSearch, string genreSearch, string dateAddedSearch) {
            this.GetSearchResultsSummaryAsync(artistSearch, albumSearch, songSearch, genreSearch, dateAddedSearch, null);
        }
        
        /// <remarks/>
        public void GetSearchResultsSummaryAsync(string artistSearch, string albumSearch, string songSearch, string genreSearch, string dateAddedSearch, object userState) {
            if ((this.GetSearchResultsSummaryOperationCompleted == null)) {
                this.GetSearchResultsSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSearchResultsSummaryOperationCompleted);
            }
            this.InvokeAsync("GetSearchResultsSummary", new object[] {
                        artistSearch,
                        albumSearch,
                        songSearch,
                        genreSearch,
                        dateAddedSearch}, this.GetSearchResultsSummaryOperationCompleted, userState);
        }
        
        private void OnGetSearchResultsSummaryOperationCompleted(object arg) {
            if ((this.GetSearchResultsSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSearchResultsSummaryCompleted(this, new GetSearchResultsSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadFile() {
            this.Invoke("UploadFile", new object[0]);
        }
        
        /// <remarks/>
        public void UploadFileAsync() {
            this.UploadFileAsync(null);
        }
        
        /// <remarks/>
        public void UploadFileAsync(object userState) {
            if ((this.UploadFileOperationCompleted == null)) {
                this.UploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileOperationCompleted);
            }
            this.InvokeAsync("UploadFile", new object[0], this.UploadFileOperationCompleted, userState);
        }
        
        private void OnUploadFileOperationCompleted(object arg) {
            if ((this.UploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcessFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProcessFile(string file) {
            object[] results = this.Invoke("ProcessFile", new object[] {
                        file});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessFileAsync(string file) {
            this.ProcessFileAsync(file, null);
        }
        
        /// <remarks/>
        public void ProcessFileAsync(string file, object userState) {
            if ((this.ProcessFileOperationCompleted == null)) {
                this.ProcessFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessFileOperationCompleted);
            }
            this.InvokeAsync("ProcessFile", new object[] {
                        file}, this.ProcessFileOperationCompleted, userState);
        }
        
        private void OnProcessFileOperationCompleted(object arg) {
            if ((this.ProcessFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessFileCompleted(this, new ProcessFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFileTag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFileTag(string file, ID3Tag tag, string songID, string albumArtFilename) {
            this.Invoke("UpdateFileTag", new object[] {
                        file,
                        tag,
                        songID,
                        albumArtFilename});
        }
        
        /// <remarks/>
        public void UpdateFileTagAsync(string file, ID3Tag tag, string songID, string albumArtFilename) {
            this.UpdateFileTagAsync(file, tag, songID, albumArtFilename, null);
        }
        
        /// <remarks/>
        public void UpdateFileTagAsync(string file, ID3Tag tag, string songID, string albumArtFilename, object userState) {
            if ((this.UpdateFileTagOperationCompleted == null)) {
                this.UpdateFileTagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFileTagOperationCompleted);
            }
            this.InvokeAsync("UpdateFileTag", new object[] {
                        file,
                        tag,
                        songID,
                        albumArtFilename}, this.UpdateFileTagOperationCompleted, userState);
        }
        
        private void OnUpdateFileTagOperationCompleted(object arg) {
            if ((this.UpdateFileTagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFileTagCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetID3TagInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object GetID3TagInfo(string file) {
            object[] results = this.Invoke("GetID3TagInfo", new object[] {
                        file});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void GetID3TagInfoAsync(string file) {
            this.GetID3TagInfoAsync(file, null);
        }
        
        /// <remarks/>
        public void GetID3TagInfoAsync(string file, object userState) {
            if ((this.GetID3TagInfoOperationCompleted == null)) {
                this.GetID3TagInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetID3TagInfoOperationCompleted);
            }
            this.InvokeAsync("GetID3TagInfo", new object[] {
                        file}, this.GetID3TagInfoOperationCompleted, userState);
        }
        
        private void OnGetID3TagInfoOperationCompleted(object arg) {
            if ((this.GetID3TagInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetID3TagInfoCompleted(this, new GetID3TagInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmptyID3Tag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ID3Tag GetEmptyID3Tag() {
            object[] results = this.Invoke("GetEmptyID3Tag", new object[0]);
            return ((ID3Tag)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmptyID3TagAsync() {
            this.GetEmptyID3TagAsync(null);
        }
        
        /// <remarks/>
        public void GetEmptyID3TagAsync(object userState) {
            if ((this.GetEmptyID3TagOperationCompleted == null)) {
                this.GetEmptyID3TagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmptyID3TagOperationCompleted);
            }
            this.InvokeAsync("GetEmptyID3Tag", new object[0], this.GetEmptyID3TagOperationCompleted, userState);
        }
        
        private void OnGetEmptyID3TagOperationCompleted(object arg) {
            if ((this.GetEmptyID3TagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmptyID3TagCompleted(this, new GetEmptyID3TagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsPlaylistedSong", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsPlaylistedSong(string songID) {
            object[] results = this.Invoke("IsPlaylistedSong", new object[] {
                        songID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsPlaylistedSongAsync(string songID) {
            this.IsPlaylistedSongAsync(songID, null);
        }
        
        /// <remarks/>
        public void IsPlaylistedSongAsync(string songID, object userState) {
            if ((this.IsPlaylistedSongOperationCompleted == null)) {
                this.IsPlaylistedSongOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsPlaylistedSongOperationCompleted);
            }
            this.InvokeAsync("IsPlaylistedSong", new object[] {
                        songID}, this.IsPlaylistedSongOperationCompleted, userState);
        }
        
        private void OnIsPlaylistedSongOperationCompleted(object arg) {
            if ((this.IsPlaylistedSongCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsPlaylistedSongCompleted(this, new IsPlaylistedSongCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManageUserPlaylist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ManageUserPlaylist(string songID, string add) {
            this.Invoke("ManageUserPlaylist", new object[] {
                        songID,
                        add});
        }
        
        /// <remarks/>
        public void ManageUserPlaylistAsync(string songID, string add) {
            this.ManageUserPlaylistAsync(songID, add, null);
        }
        
        /// <remarks/>
        public void ManageUserPlaylistAsync(string songID, string add, object userState) {
            if ((this.ManageUserPlaylistOperationCompleted == null)) {
                this.ManageUserPlaylistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManageUserPlaylistOperationCompleted);
            }
            this.InvokeAsync("ManageUserPlaylist", new object[] {
                        songID,
                        add}, this.ManageUserPlaylistOperationCompleted, userState);
        }
        
        private void OnManageUserPlaylistOperationCompleted(object arg) {
            if ((this.ManageUserPlaylistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManageUserPlaylistCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserPlaylist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object GetUserPlaylist() {
            object[] results = this.Invoke("GetUserPlaylist", new object[0]);
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPlaylistAsync() {
            this.GetUserPlaylistAsync(null);
        }
        
        /// <remarks/>
        public void GetUserPlaylistAsync(object userState) {
            if ((this.GetUserPlaylistOperationCompleted == null)) {
                this.GetUserPlaylistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPlaylistOperationCompleted);
            }
            this.InvokeAsync("GetUserPlaylist", new object[0], this.GetUserPlaylistOperationCompleted, userState);
        }
        
        private void OnGetUserPlaylistOperationCompleted(object arg) {
            if ((this.GetUserPlaylistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPlaylistCompleted(this, new GetUserPlaylistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetUsers() {
            this.Invoke("GetUsers", new object[0]);
        }
        
        /// <remarks/>
        public void GetUsersAsync() {
            this.GetUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetUsersAsync(object userState) {
            if ((this.GetUsersOperationCompleted == null)) {
                this.GetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOperationCompleted);
            }
            this.InvokeAsync("GetUsers", new object[0], this.GetUsersOperationCompleted, userState);
        }
        
        private void OnGetUsersOperationCompleted(object arg) {
            if ((this.GetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthorizedUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object AuthorizedUser(string username, string password) {
            object[] results = this.Invoke("AuthorizedUser", new object[] {
                        username,
                        password});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void AuthorizedUserAsync(string username, string password) {
            this.AuthorizedUserAsync(username, password, null);
        }
        
        /// <remarks/>
        public void AuthorizedUserAsync(string username, string password, object userState) {
            if ((this.AuthorizedUserOperationCompleted == null)) {
                this.AuthorizedUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthorizedUserOperationCompleted);
            }
            this.InvokeAsync("AuthorizedUser", new object[] {
                        username,
                        password}, this.AuthorizedUserOperationCompleted, userState);
        }
        
        private void OnAuthorizedUserOperationCompleted(object arg) {
            if ((this.AuthorizedUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthorizedUserCompleted(this, new AuthorizedUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public USER_SECURITY GetUserByName(string username) {
            object[] results = this.Invoke("GetUserByName", new object[] {
                        username});
            return ((USER_SECURITY)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByNameAsync(string username) {
            this.GetUserByNameAsync(username, null);
        }
        
        /// <remarks/>
        public void GetUserByNameAsync(string username, object userState) {
            if ((this.GetUserByNameOperationCompleted == null)) {
                this.GetUserByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByNameOperationCompleted);
            }
            this.InvokeAsync("GetUserByName", new object[] {
                        username}, this.GetUserByNameOperationCompleted, userState);
        }
        
        private void OnGetUserByNameOperationCompleted(object arg) {
            if ((this.GetUserByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByNameCompleted(this, new GetUserByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public USER_SECURITY GetUserByID(int userSecurityID) {
            object[] results = this.Invoke("GetUserByID", new object[] {
                        userSecurityID});
            return ((USER_SECURITY)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByIDAsync(int userSecurityID) {
            this.GetUserByIDAsync(userSecurityID, null);
        }
        
        /// <remarks/>
        public void GetUserByIDAsync(int userSecurityID, object userState) {
            if ((this.GetUserByIDOperationCompleted == null)) {
                this.GetUserByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByIDOperationCompleted);
            }
            this.InvokeAsync("GetUserByID", new object[] {
                        userSecurityID}, this.GetUserByIDOperationCompleted, userState);
        }
        
        private void OnGetUserByIDOperationCompleted(object arg) {
            if ((this.GetUserByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByIDCompleted(this, new GetUserByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmptyUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public USER_SECURITY GetEmptyUser() {
            object[] results = this.Invoke("GetEmptyUser", new object[0]);
            return ((USER_SECURITY)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmptyUserAsync() {
            this.GetEmptyUserAsync(null);
        }
        
        /// <remarks/>
        public void GetEmptyUserAsync(object userState) {
            if ((this.GetEmptyUserOperationCompleted == null)) {
                this.GetEmptyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmptyUserOperationCompleted);
            }
            this.InvokeAsync("GetEmptyUser", new object[0], this.GetEmptyUserOperationCompleted, userState);
        }
        
        private void OnGetEmptyUserOperationCompleted(object arg) {
            if ((this.GetEmptyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmptyUserCompleted(this, new GetEmptyUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public USER_SECURITY SaveUser(USER_SECURITY user) {
            object[] results = this.Invoke("SaveUser", new object[] {
                        user});
            return ((USER_SECURITY)(results[0]));
        }
        
        /// <remarks/>
        public void SaveUserAsync(USER_SECURITY user) {
            this.SaveUserAsync(user, null);
        }
        
        /// <remarks/>
        public void SaveUserAsync(USER_SECURITY user, object userState) {
            if ((this.SaveUserOperationCompleted == null)) {
                this.SaveUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUserOperationCompleted);
            }
            this.InvokeAsync("SaveUser", new object[] {
                        user}, this.SaveUserOperationCompleted, userState);
        }
        
        private void OnSaveUserOperationCompleted(object arg) {
            if ((this.SaveUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUserCompleted(this, new SaveUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ARTIST {
        
        private decimal aRTIST_IDField;
        
        private string aRTIST_NAMEField;
        
        private System.DateTime cREATE_DATEField;
        
        private System.Nullable<System.DateTime> uPDATE_DATEField;
        
        /// <remarks/>
        public decimal ARTIST_ID {
            get {
                return this.aRTIST_IDField;
            }
            set {
                this.aRTIST_IDField = value;
            }
        }
        
        /// <remarks/>
        public string ARTIST_NAME {
            get {
                return this.aRTIST_NAMEField;
            }
            set {
                this.aRTIST_NAMEField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CREATE_DATE {
            get {
                return this.cREATE_DATEField;
            }
            set {
                this.cREATE_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UPDATE_DATE {
            get {
                return this.uPDATE_DATEField;
            }
            set {
                this.uPDATE_DATEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class USER_SECURITY {
        
        private decimal uSER_SECURITY_IDField;
        
        private string uSERNAMEField;
        
        private string pASSWORDField;
        
        private bool lOCKED_FLAGField;
        
        private bool aCTIVE_FLAGField;
        
        private System.Nullable<System.DateTime> lAST_LOGIN_DATEField;
        
        private decimal lOGIN_FAILURE_COUNTField;
        
        private System.Nullable<System.DateTime> lAST_FAILURE_DATEField;
        
        private System.DateTime cREATE_DATEField;
        
        private System.Nullable<System.DateTime> uPDATE_DATEField;
        
        private bool aDMIN_FLAGField;
        
        private System.Nullable<System.DateTime> pREV_TO_LAST_LOGIN_DATEField;
        
        /// <remarks/>
        public decimal USER_SECURITY_ID {
            get {
                return this.uSER_SECURITY_IDField;
            }
            set {
                this.uSER_SECURITY_IDField = value;
            }
        }
        
        /// <remarks/>
        public string USERNAME {
            get {
                return this.uSERNAMEField;
            }
            set {
                this.uSERNAMEField = value;
            }
        }
        
        /// <remarks/>
        public string PASSWORD {
            get {
                return this.pASSWORDField;
            }
            set {
                this.pASSWORDField = value;
            }
        }
        
        /// <remarks/>
        public bool LOCKED_FLAG {
            get {
                return this.lOCKED_FLAGField;
            }
            set {
                this.lOCKED_FLAGField = value;
            }
        }
        
        /// <remarks/>
        public bool ACTIVE_FLAG {
            get {
                return this.aCTIVE_FLAGField;
            }
            set {
                this.aCTIVE_FLAGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LAST_LOGIN_DATE {
            get {
                return this.lAST_LOGIN_DATEField;
            }
            set {
                this.lAST_LOGIN_DATEField = value;
            }
        }
        
        /// <remarks/>
        public decimal LOGIN_FAILURE_COUNT {
            get {
                return this.lOGIN_FAILURE_COUNTField;
            }
            set {
                this.lOGIN_FAILURE_COUNTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LAST_FAILURE_DATE {
            get {
                return this.lAST_FAILURE_DATEField;
            }
            set {
                this.lAST_FAILURE_DATEField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CREATE_DATE {
            get {
                return this.cREATE_DATEField;
            }
            set {
                this.cREATE_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UPDATE_DATE {
            get {
                return this.uPDATE_DATEField;
            }
            set {
                this.uPDATE_DATEField = value;
            }
        }
        
        /// <remarks/>
        public bool ADMIN_FLAG {
            get {
                return this.aDMIN_FLAGField;
            }
            set {
                this.aDMIN_FLAGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> PREV_TO_LAST_LOGIN_DATE {
            get {
                return this.pREV_TO_LAST_LOGIN_DATEField;
            }
            set {
                this.pREV_TO_LAST_LOGIN_DATEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ID3Tag {
        
        private string[] id3v1ArtistsField;
        
        private string id3v1ArtistField;
        
        private string[] albumArtistsField;
        
        private string albumArtistField;
        
        private string[] artistsField;
        
        private string artistField;
        
        private string albumField;
        
        private string id3v1AlbumField;
        
        private string titleField;
        
        private string id3v1TitleField;
        
        private string[] genresField;
        
        private string genreField;
        
        private uint yearField;
        
        private string yearStringField;
        
        private uint trackNumField;
        
        private string trackNumStringField;
        
        private uint discNumField;
        
        private string discNumStringField;
        
        private string lyricsField;
        
        private string commentField;
        
        private string conductorField;
        
        private string durationField;
        
        private int bitrateField;
        
        private int sampleRateField;
        
        private byte[] albumArtField;
        
        private byte[] backCoverImageField;
        
        private byte[] artistImageField;
        
        private byte[] bandImageField;
        
        private string[] composersField;
        
        private string composerField;
        
        private string[] performersField;
        
        private string performerField;
        
        private string fileNameField;
        
        private string copyrightField;
        
        /// <remarks/>
        public string[] id3v1Artists {
            get {
                return this.id3v1ArtistsField;
            }
            set {
                this.id3v1ArtistsField = value;
            }
        }
        
        /// <remarks/>
        public string id3v1Artist {
            get {
                return this.id3v1ArtistField;
            }
            set {
                this.id3v1ArtistField = value;
            }
        }
        
        /// <remarks/>
        public string[] AlbumArtists {
            get {
                return this.albumArtistsField;
            }
            set {
                this.albumArtistsField = value;
            }
        }
        
        /// <remarks/>
        public string AlbumArtist {
            get {
                return this.albumArtistField;
            }
            set {
                this.albumArtistField = value;
            }
        }
        
        /// <remarks/>
        public string[] Artists {
            get {
                return this.artistsField;
            }
            set {
                this.artistsField = value;
            }
        }
        
        /// <remarks/>
        public string Artist {
            get {
                return this.artistField;
            }
            set {
                this.artistField = value;
            }
        }
        
        /// <remarks/>
        public string Album {
            get {
                return this.albumField;
            }
            set {
                this.albumField = value;
            }
        }
        
        /// <remarks/>
        public string id3v1Album {
            get {
                return this.id3v1AlbumField;
            }
            set {
                this.id3v1AlbumField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string id3v1Title {
            get {
                return this.id3v1TitleField;
            }
            set {
                this.id3v1TitleField = value;
            }
        }
        
        /// <remarks/>
        public string[] Genres {
            get {
                return this.genresField;
            }
            set {
                this.genresField = value;
            }
        }
        
        /// <remarks/>
        public string Genre {
            get {
                return this.genreField;
            }
            set {
                this.genreField = value;
            }
        }
        
        /// <remarks/>
        public uint Year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        public string YearString {
            get {
                return this.yearStringField;
            }
            set {
                this.yearStringField = value;
            }
        }
        
        /// <remarks/>
        public uint TrackNum {
            get {
                return this.trackNumField;
            }
            set {
                this.trackNumField = value;
            }
        }
        
        /// <remarks/>
        public string TrackNumString {
            get {
                return this.trackNumStringField;
            }
            set {
                this.trackNumStringField = value;
            }
        }
        
        /// <remarks/>
        public uint DiscNum {
            get {
                return this.discNumField;
            }
            set {
                this.discNumField = value;
            }
        }
        
        /// <remarks/>
        public string DiscNumString {
            get {
                return this.discNumStringField;
            }
            set {
                this.discNumStringField = value;
            }
        }
        
        /// <remarks/>
        public string Lyrics {
            get {
                return this.lyricsField;
            }
            set {
                this.lyricsField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string Conductor {
            get {
                return this.conductorField;
            }
            set {
                this.conductorField = value;
            }
        }
        
        /// <remarks/>
        public string Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public int Bitrate {
            get {
                return this.bitrateField;
            }
            set {
                this.bitrateField = value;
            }
        }
        
        /// <remarks/>
        public int SampleRate {
            get {
                return this.sampleRateField;
            }
            set {
                this.sampleRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] AlbumArt {
            get {
                return this.albumArtField;
            }
            set {
                this.albumArtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] BackCoverImage {
            get {
                return this.backCoverImageField;
            }
            set {
                this.backCoverImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ArtistImage {
            get {
                return this.artistImageField;
            }
            set {
                this.artistImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] BandImage {
            get {
                return this.bandImageField;
            }
            set {
                this.bandImageField = value;
            }
        }
        
        /// <remarks/>
        public string[] Composers {
            get {
                return this.composersField;
            }
            set {
                this.composersField = value;
            }
        }
        
        /// <remarks/>
        public string Composer {
            get {
                return this.composerField;
            }
            set {
                this.composerField = value;
            }
        }
        
        /// <remarks/>
        public string[] Performers {
            get {
                return this.performersField;
            }
            set {
                this.performersField = value;
            }
        }
        
        /// <remarks/>
        public string Performer {
            get {
                return this.performerField;
            }
            set {
                this.performerField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string Copyright {
            get {
                return this.copyrightField;
            }
            set {
                this.copyrightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SearchSummary {
        
        private int artistCountField;
        
        private int albumCountField;
        
        private int songCountField;
        
        private int genreCountField;
        
        /// <remarks/>
        public int ArtistCount {
            get {
                return this.artistCountField;
            }
            set {
                this.artistCountField = value;
            }
        }
        
        /// <remarks/>
        public int AlbumCount {
            get {
                return this.albumCountField;
            }
            set {
                this.albumCountField = value;
            }
        }
        
        /// <remarks/>
        public int SongCount {
            get {
                return this.songCountField;
            }
            set {
                this.songCountField = value;
            }
        }
        
        /// <remarks/>
        public int GenreCount {
            get {
                return this.genreCountField;
            }
            set {
                this.genreCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SONG {
        
        private decimal sONG_IDField;
        
        private System.Nullable<decimal> aRTIST_IDField;
        
        private System.Nullable<decimal> aLBUM_IDField;
        
        private string sONG_TITLEField;
        
        private byte[] aLBUM_ARTField;
        
        private string lYRICSField;
        
        private string yEARField;
        
        private string gENREField;
        
        private string tRACK_NUMField;
        
        private string dISC_NUMField;
        
        private bool aLBUM_ART_FLAGField;
        
        private bool lYRICS_FLAGField;
        
        private bool iTUNES_FLAGField;
        
        private bool iD3V1_FLAGField;
        
        private string iD3V1_ARTISTField;
        
        private string iD3V1_ALBUMField;
        
        private string iD3V1_TITLEField;
        
        private bool iD3V2_FLAGField;
        
        private string iD3V2_ARTISTField;
        
        private string iD3V2_ALBUMField;
        
        private string iD3V2_TITLEField;
        
        private bool uPDATE_TAGS_FLAGField;
        
        private string nEW_ALBUMField;
        
        private string nEW_TITLEField;
        
        private System.Nullable<decimal> nEW_TRACK_NUMField;
        
        private string nEW_GENREField;
        
        private string fILENAMEField;
        
        private string aBS_FILE_PATHField;
        
        private string rEL_FILE_PATHField;
        
        private System.DateTime cREATE_DATEField;
        
        private System.Nullable<System.DateTime> uPDATE_DATEField;
        
        private bool rECOMMEND_FLAGField;
        
        private bool uPDATE_FILE_FLAGField;
        
        private byte[] oLD_ARTField;
        
        private bool fAVORITES_FLAGField;
        
        private string vIDEO_PATHField;
        
        private System.Nullable<decimal> fILE_SIZEField;
        
        private string dURATIONField;
        
        private System.Nullable<decimal> sAMPLE_RATEField;
        
        private System.Nullable<decimal> bITRATEField;
        
        private byte[] bACK_COVERField;
        
        private byte[] aRTIST_IMAGEField;
        
        private byte[] bANDField;
        
        private decimal pLAY_COUNTField;
        
        private decimal dOWNLOAD_COUNTField;
        
        private string nEW_ARTISTField;
        
        private string cOMMENTSField;
        
        private string cOMPOSERField;
        
        private string cONDUCTORField;
        
        /// <remarks/>
        public decimal SONG_ID {
            get {
                return this.sONG_IDField;
            }
            set {
                this.sONG_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> ARTIST_ID {
            get {
                return this.aRTIST_IDField;
            }
            set {
                this.aRTIST_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> ALBUM_ID {
            get {
                return this.aLBUM_IDField;
            }
            set {
                this.aLBUM_IDField = value;
            }
        }
        
        /// <remarks/>
        public string SONG_TITLE {
            get {
                return this.sONG_TITLEField;
            }
            set {
                this.sONG_TITLEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ALBUM_ART {
            get {
                return this.aLBUM_ARTField;
            }
            set {
                this.aLBUM_ARTField = value;
            }
        }
        
        /// <remarks/>
        public string LYRICS {
            get {
                return this.lYRICSField;
            }
            set {
                this.lYRICSField = value;
            }
        }
        
        /// <remarks/>
        public string YEAR {
            get {
                return this.yEARField;
            }
            set {
                this.yEARField = value;
            }
        }
        
        /// <remarks/>
        public string GENRE {
            get {
                return this.gENREField;
            }
            set {
                this.gENREField = value;
            }
        }
        
        /// <remarks/>
        public string TRACK_NUM {
            get {
                return this.tRACK_NUMField;
            }
            set {
                this.tRACK_NUMField = value;
            }
        }
        
        /// <remarks/>
        public string DISC_NUM {
            get {
                return this.dISC_NUMField;
            }
            set {
                this.dISC_NUMField = value;
            }
        }
        
        /// <remarks/>
        public bool ALBUM_ART_FLAG {
            get {
                return this.aLBUM_ART_FLAGField;
            }
            set {
                this.aLBUM_ART_FLAGField = value;
            }
        }
        
        /// <remarks/>
        public bool LYRICS_FLAG {
            get {
                return this.lYRICS_FLAGField;
            }
            set {
                this.lYRICS_FLAGField = value;
            }
        }
        
        /// <remarks/>
        public bool ITUNES_FLAG {
            get {
                return this.iTUNES_FLAGField;
            }
            set {
                this.iTUNES_FLAGField = value;
            }
        }
        
        /// <remarks/>
        public bool ID3V1_FLAG {
            get {
                return this.iD3V1_FLAGField;
            }
            set {
                this.iD3V1_FLAGField = value;
            }
        }
        
        /// <remarks/>
        public string ID3V1_ARTIST {
            get {
                return this.iD3V1_ARTISTField;
            }
            set {
                this.iD3V1_ARTISTField = value;
            }
        }
        
        /// <remarks/>
        public string ID3V1_ALBUM {
            get {
                return this.iD3V1_ALBUMField;
            }
            set {
                this.iD3V1_ALBUMField = value;
            }
        }
        
        /// <remarks/>
        public string ID3V1_TITLE {
            get {
                return this.iD3V1_TITLEField;
            }
            set {
                this.iD3V1_TITLEField = value;
            }
        }
        
        /// <remarks/>
        public bool ID3V2_FLAG {
            get {
                return this.iD3V2_FLAGField;
            }
            set {
                this.iD3V2_FLAGField = value;
            }
        }
        
        /// <remarks/>
        public string ID3V2_ARTIST {
            get {
                return this.iD3V2_ARTISTField;
            }
            set {
                this.iD3V2_ARTISTField = value;
            }
        }
        
        /// <remarks/>
        public string ID3V2_ALBUM {
            get {
                return this.iD3V2_ALBUMField;
            }
            set {
                this.iD3V2_ALBUMField = value;
            }
        }
        
        /// <remarks/>
        public string ID3V2_TITLE {
            get {
                return this.iD3V2_TITLEField;
            }
            set {
                this.iD3V2_TITLEField = value;
            }
        }
        
        /// <remarks/>
        public bool UPDATE_TAGS_FLAG {
            get {
                return this.uPDATE_TAGS_FLAGField;
            }
            set {
                this.uPDATE_TAGS_FLAGField = value;
            }
        }
        
        /// <remarks/>
        public string NEW_ALBUM {
            get {
                return this.nEW_ALBUMField;
            }
            set {
                this.nEW_ALBUMField = value;
            }
        }
        
        /// <remarks/>
        public string NEW_TITLE {
            get {
                return this.nEW_TITLEField;
            }
            set {
                this.nEW_TITLEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> NEW_TRACK_NUM {
            get {
                return this.nEW_TRACK_NUMField;
            }
            set {
                this.nEW_TRACK_NUMField = value;
            }
        }
        
        /// <remarks/>
        public string NEW_GENRE {
            get {
                return this.nEW_GENREField;
            }
            set {
                this.nEW_GENREField = value;
            }
        }
        
        /// <remarks/>
        public string FILENAME {
            get {
                return this.fILENAMEField;
            }
            set {
                this.fILENAMEField = value;
            }
        }
        
        /// <remarks/>
        public string ABS_FILE_PATH {
            get {
                return this.aBS_FILE_PATHField;
            }
            set {
                this.aBS_FILE_PATHField = value;
            }
        }
        
        /// <remarks/>
        public string REL_FILE_PATH {
            get {
                return this.rEL_FILE_PATHField;
            }
            set {
                this.rEL_FILE_PATHField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CREATE_DATE {
            get {
                return this.cREATE_DATEField;
            }
            set {
                this.cREATE_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UPDATE_DATE {
            get {
                return this.uPDATE_DATEField;
            }
            set {
                this.uPDATE_DATEField = value;
            }
        }
        
        /// <remarks/>
        public bool RECOMMEND_FLAG {
            get {
                return this.rECOMMEND_FLAGField;
            }
            set {
                this.rECOMMEND_FLAGField = value;
            }
        }
        
        /// <remarks/>
        public bool UPDATE_FILE_FLAG {
            get {
                return this.uPDATE_FILE_FLAGField;
            }
            set {
                this.uPDATE_FILE_FLAGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] OLD_ART {
            get {
                return this.oLD_ARTField;
            }
            set {
                this.oLD_ARTField = value;
            }
        }
        
        /// <remarks/>
        public bool FAVORITES_FLAG {
            get {
                return this.fAVORITES_FLAGField;
            }
            set {
                this.fAVORITES_FLAGField = value;
            }
        }
        
        /// <remarks/>
        public string VIDEO_PATH {
            get {
                return this.vIDEO_PATHField;
            }
            set {
                this.vIDEO_PATHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> FILE_SIZE {
            get {
                return this.fILE_SIZEField;
            }
            set {
                this.fILE_SIZEField = value;
            }
        }
        
        /// <remarks/>
        public string DURATION {
            get {
                return this.dURATIONField;
            }
            set {
                this.dURATIONField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> SAMPLE_RATE {
            get {
                return this.sAMPLE_RATEField;
            }
            set {
                this.sAMPLE_RATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> BITRATE {
            get {
                return this.bITRATEField;
            }
            set {
                this.bITRATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] BACK_COVER {
            get {
                return this.bACK_COVERField;
            }
            set {
                this.bACK_COVERField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ARTIST_IMAGE {
            get {
                return this.aRTIST_IMAGEField;
            }
            set {
                this.aRTIST_IMAGEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] BAND {
            get {
                return this.bANDField;
            }
            set {
                this.bANDField = value;
            }
        }
        
        /// <remarks/>
        public decimal PLAY_COUNT {
            get {
                return this.pLAY_COUNTField;
            }
            set {
                this.pLAY_COUNTField = value;
            }
        }
        
        /// <remarks/>
        public decimal DOWNLOAD_COUNT {
            get {
                return this.dOWNLOAD_COUNTField;
            }
            set {
                this.dOWNLOAD_COUNTField = value;
            }
        }
        
        /// <remarks/>
        public string NEW_ARTIST {
            get {
                return this.nEW_ARTISTField;
            }
            set {
                this.nEW_ARTISTField = value;
            }
        }
        
        /// <remarks/>
        public string COMMENTS {
            get {
                return this.cOMMENTSField;
            }
            set {
                this.cOMMENTSField = value;
            }
        }
        
        /// <remarks/>
        public string COMPOSER {
            get {
                return this.cOMPOSERField;
            }
            set {
                this.cOMPOSERField = value;
            }
        }
        
        /// <remarks/>
        public string CONDUCTOR {
            get {
                return this.cONDUCTORField;
            }
            set {
                this.cONDUCTORField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ALBUM {
        
        private decimal aLBUM_IDField;
        
        private decimal aRTIST_IDField;
        
        private string aLBUM_NAMEField;
        
        private System.DateTime cREATE_DATEField;
        
        private System.Nullable<System.DateTime> uPDATE_DATEField;
        
        /// <remarks/>
        public decimal ALBUM_ID {
            get {
                return this.aLBUM_IDField;
            }
            set {
                this.aLBUM_IDField = value;
            }
        }
        
        /// <remarks/>
        public decimal ARTIST_ID {
            get {
                return this.aRTIST_IDField;
            }
            set {
                this.aRTIST_IDField = value;
            }
        }
        
        /// <remarks/>
        public string ALBUM_NAME {
            get {
                return this.aLBUM_NAMEField;
            }
            set {
                this.aLBUM_NAMEField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CREATE_DATE {
            get {
                return this.cREATE_DATEField;
            }
            set {
                this.cREATE_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UPDATE_DATE {
            get {
                return this.uPDATE_DATEField;
            }
            set {
                this.uPDATE_DATEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetEmptyArtistCompletedEventHandler(object sender, GetEmptyArtistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmptyArtistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmptyArtistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ARTIST Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ARTIST)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateArtistCompletedEventHandler(object sender, UpdateArtistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateArtistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateArtistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ARTIST Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ARTIST)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SaveArtistCompletedEventHandler(object sender, SaveArtistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveArtistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveArtistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ARTIST Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ARTIST)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetArtistCompletedEventHandler(object sender, GetArtistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArtistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArtistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ARTIST Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ARTIST)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetArtistsCompletedEventHandler(object sender, GetArtistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArtistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArtistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ARTIST[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ARTIST[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetEmptyAlbumCompletedEventHandler(object sender, GetEmptyAlbumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmptyAlbumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmptyAlbumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ALBUM Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ALBUM)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateAlbumCompletedEventHandler(object sender, UpdateAlbumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAlbumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAlbumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ALBUM Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ALBUM)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SaveAlbumCompletedEventHandler(object sender, SaveAlbumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveAlbumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveAlbumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ALBUM Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ALBUM)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAlbumCompletedEventHandler(object sender, GetAlbumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlbumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlbumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ALBUM Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ALBUM)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAlbumsCompletedEventHandler(object sender, GetAlbumsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlbumsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlbumsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ALBUM[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ALBUM[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetEmptySongCompletedEventHandler(object sender, GetEmptySongCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmptySongCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmptySongCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SONG Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SONG)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SaveSongCompletedEventHandler(object sender, SaveSongCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSongCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSongCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SONG Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SONG)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetSongCompletedEventHandler(object sender, GetSongCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSongCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSongCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SONG Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SONG)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetSongsCompletedEventHandler(object sender, GetSongsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSongsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSongsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SONG[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SONG[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetSongListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetNewestSongDateCompletedEventHandler(object sender, GetNewestSongDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewestSongDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewestSongDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetSearchResultsSummaryCompletedEventHandler(object sender, GetSearchResultsSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSearchResultsSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSearchResultsSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SearchSummary Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SearchSummary)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UploadFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ProcessFileCompletedEventHandler(object sender, ProcessFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateFileTagCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetID3TagInfoCompletedEventHandler(object sender, GetID3TagInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetID3TagInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetID3TagInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetEmptyID3TagCompletedEventHandler(object sender, GetEmptyID3TagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmptyID3TagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmptyID3TagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ID3Tag Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ID3Tag)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void IsPlaylistedSongCompletedEventHandler(object sender, IsPlaylistedSongCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsPlaylistedSongCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsPlaylistedSongCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ManageUserPlaylistCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetUserPlaylistCompletedEventHandler(object sender, GetUserPlaylistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPlaylistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPlaylistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetUsersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AuthorizedUserCompletedEventHandler(object sender, AuthorizedUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthorizedUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthorizedUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetUserByNameCompletedEventHandler(object sender, GetUserByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public USER_SECURITY Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((USER_SECURITY)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetUserByIDCompletedEventHandler(object sender, GetUserByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public USER_SECURITY Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((USER_SECURITY)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetEmptyUserCompletedEventHandler(object sender, GetEmptyUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmptyUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmptyUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public USER_SECURITY Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((USER_SECURITY)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SaveUserCompletedEventHandler(object sender, SaveUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public USER_SECURITY Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((USER_SECURITY)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591